../sv-benchmarks/java/jayhorn-recursive/SatEvenOdd01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int n = Verifier.nondetInt();

../sv-benchmarks/java/jayhorn-recursive/Addition/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int m = Verifier.nondetInt();

    int n = Verifier.nondetInt();

../sv-benchmarks/java/jayhorn-recursive/UnsatMccarthy91/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

../sv-benchmarks/java/jayhorn-recursive/Ackermann01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int m = Verifier.nondetInt();

    int n = Verifier.nondetInt();

../sv-benchmarks/java/jayhorn-recursive/SatFibonacci01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

../sv-benchmarks/java/jayhorn-recursive/InfiniteLoop/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    boolean b = Verifier.nondetBoolean();

../sv-benchmarks/java/jayhorn-recursive/SatPrimes01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int n = Verifier.nondetInt();

    int f1 = Verifier.nondetInt();

    int f2 = Verifier.nondetInt();

../sv-benchmarks/java/jayhorn-recursive/SatAckermann01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int m = Verifier.nondetInt();

    int n = Verifier.nondetInt();

../sv-benchmarks/java/jayhorn-recursive/UnsatAddition01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int m = Verifier.nondetInt();

    int n = Verifier.nondetInt();

../sv-benchmarks/java/jayhorn-recursive/SatAckermann03/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int m = Verifier.nondetInt();

    int n = Verifier.nondetInt();

../sv-benchmarks/java/jayhorn-recursive/UnsatFibonacci01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

../sv-benchmarks/java/jayhorn-recursive/SatFibonacci02/Main.java
../sv-benchmarks/java/jayhorn-recursive/SatMccarthy91/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

../sv-benchmarks/java/jayhorn-recursive/SatAckermann02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int m = Verifier.nondetInt();

    int n = Verifier.nondetInt();

../sv-benchmarks/java/jayhorn-recursive/UnsatAckermann01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int m = Verifier.nondetInt();

    int n = Verifier.nondetInt();

../sv-benchmarks/java/jayhorn-recursive/UnsatEvenOdd01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int n = Verifier.nondetInt();

../sv-benchmarks/java/jayhorn-recursive/SatAddition01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int m = Verifier.nondetInt();

    int n = Verifier.nondetInt();

../sv-benchmarks/java/jayhorn-recursive/SatFibonacci03/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

../sv-benchmarks/java/jayhorn-recursive/SatHanoi01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int n = Verifier.nondetInt();

../sv-benchmarks/java/jayhorn-recursive/UnsatFibonacci02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

../sv-benchmarks/java/jayhorn-recursive/SatGcd/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int m = Verifier.nondetInt();

    int n = Verifier.nondetInt();

../sv-benchmarks/java/jayhorn-recursive/UnsatAddition02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int m = Verifier.nondetInt();

    int n = Verifier.nondetInt();

../sv-benchmarks/java/jayhorn-recursive/SatMultCommutative01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int m = Verifier.nondetInt();

    int n = Verifier.nondetInt();

../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/ParseException.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/CommandLineParser.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/Options.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/OptionValidator.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/MissingArgumentException.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/HelpFormatter.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/AlreadySelectedException.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/MissingOptionException.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/TestCLI.java
import org.sosy_lab.sv_benchmarks.Verifier;

    char in0 = Verifier.nondetChar();

    char in1 = Verifier.nondetChar();

    char in2 = Verifier.nondetChar();

    char in3 = Verifier.nondetChar();

    char in4 = Verifier.nondetChar();

    char in5 = Verifier.nondetChar();

    char in6 = Verifier.nondetChar();

    char in7 = Verifier.nondetChar();

    boolean in8 = Verifier.nondetBoolean();

../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/Main.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/Option.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/Parser.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/BasicParser.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/CommandLine.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/OptionGroup.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/OptionBuilder.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/TypeHandler.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/PosixParser.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/GnuParser.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/PatternOptionBuilder.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/UnrecognizedOptionException.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/CLI.java
../sv-benchmarks/java/java-ranger-regression/apachecli_eqchk/Util.java
../sv-benchmarks/java/java-ranger-regression/TCAS_prop2/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt());

../sv-benchmarks/java/java-ranger-regression/TCAS_prop3/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt());

../sv-benchmarks/java/java-ranger-regression/TCAS_prop1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt(),

        Verifier.nondetInt());

../sv-benchmarks/java/java-ranger-regression/alarm/prop5/Main.java
../sv-benchmarks/java/java-ranger-regression/alarm/impl/SystemMonitorOutput.java
import org.sosy_lab.sv_benchmarks.Verifier;

  boolean systemMonitorFailed = Verifier.nondetBoolean();

../sv-benchmarks/java/java-ranger-regression/alarm/impl/DeviceConfigurationInputs.java
import org.sosy_lab.sv_benchmarks.Verifier;

  public int audioEnableDuration = Verifier.nondetInt();

  public int audioLevel = Verifier.nondetInt();

  public int configWarningDuration = Verifier.nondetInt();

  public int emptyReservoir = Verifier.nondetInt();

  public int lowReservoir = Verifier.nondetInt();

  public int maxConfigDuration = Verifier.nondetInt();

  public int maxDurationOverInfusion = Verifier.nondetInt();

  public int maxDurationUnderInfusion = Verifier.nondetInt();

  public int maxPausedDuration = Verifier.nondetInt();

  public int maxIdleDuration = Verifier.nondetInt();

  public int toleranceMax = Verifier.nondetInt();

  public int toleranceMin = Verifier.nondetInt();

  public int logInterval = Verifier.nondetInt();

  public int systemTestInterval = Verifier.nondetInt();

  public int maxDisplayDuration = Verifier.nondetInt();

  public int maxConfirmStopDuration = Verifier.nondetInt();

../sv-benchmarks/java/java-ranger-regression/alarm/impl/InfusionManagerOutputs.java
import org.sosy_lab.sv_benchmarks.Verifier;

  public int commandedFlowRate = Verifier.nondetInt();

  public int currentSystemMode = Verifier.nondetInt();

  public boolean newInfusion = Verifier.nondetBoolean();

  public int logMessageId = Verifier.nondetInt();

  public int actualInfusionDuration = Verifier.nondetInt();

../sv-benchmarks/java/java-ranger-regression/alarm/impl/OperatorCommands.java
import org.sosy_lab.sv_benchmarks.Verifier;

  public boolean systemStart = Verifier.nondetBoolean();

  public boolean systemStop = Verifier.nondetBoolean();

  public boolean Infusion_Initiate = Verifier.nondetBoolean();

  public boolean infusionInhibit = Verifier.nondetBoolean();

  public boolean infusionCancel = Verifier.nondetBoolean();

  public boolean dataConfig = Verifier.nondetBoolean();

  public boolean next = Verifier.nondetBoolean();

  public boolean back = Verifier.nondetBoolean();

  public boolean cancel = Verifier.nondetBoolean();

  public boolean keyboard = Verifier.nondetBoolean();

  public int disableAudio = Verifier.nondetInt();

  public boolean notificationCancel = Verifier.nondetBoolean();

  public int configurationType = Verifier.nondetInt();

  public boolean confirmStop = Verifier.nondetBoolean();

../sv-benchmarks/java/java-ranger-regression/alarm/impl/DrugDatabaseInputs.java
import org.sosy_lab.sv_benchmarks.Verifier;

  public boolean knownPrescription = Verifier.nondetBoolean();

  public int drugName = Verifier.nondetInt();

  public int drugConcentrationHigh = Verifier.nondetInt();

  public int drugConcentrationLow = Verifier.nondetInt();

  public int VTBIHigh = Verifier.nondetInt();

  public int VTBILow = Verifier.nondetInt();

  public int intervalPatientBolus = Verifier.nondetInt();

  public int numberMaxPatientBolus = Verifier.nondetInt();

  public int flowRateKVO = Verifier.nondetInt();

  public int flowRateHigh = Verifier.nondetInt();

  public int flowRateLow = Verifier.nondetInt();

../sv-benchmarks/java/java-ranger-regression/alarm/impl/ConfigOutputs.java
import org.sosy_lab.sv_benchmarks.Verifier;

  public int patientId = Verifier.nondetInt();

  public int drugName = Verifier.nondetInt();

  public int drugConcentration = Verifier.nondetInt();

  public int infusionTotalDuration = Verifier.nondetInt();

  public int vtbiTotal = Verifier.nondetInt();

  public int flowRateBasal = Verifier.nondetInt();

  public int flowRateIntermittentBolus = Verifier.nondetInt();

  public int durationIntermittentBolus = Verifier.nondetInt();

  public int intervalIntermittentBolus = Verifier.nondetInt();

  public int flowRatePatientBolus = Verifier.nondetInt();

  public int durationPatientBolus = Verifier.nondetInt();

  public int lockoutPeriodPatientBolus = Verifier.nondetInt();

  public int maxNumberOfPatientBolus = Verifier.nondetInt();

  public int flowRateKVO = Verifier.nondetInt();

  public int enteredReservoirVolume = Verifier.nondetInt();

  public int reservoirVolume = Verifier.nondetInt();

  public int configured = Verifier.nondetInt();

  public int errorMessageID = Verifier.nondetInt();

  public boolean requestConfigType = Verifier.nondetBoolean();

  public boolean requestConfirmInfusionInitiate = Verifier.nondetBoolean();

  public boolean requestPatientDrugInfo = Verifier.nondetBoolean();

  public boolean requestInfusionInfo = Verifier.nondetBoolean();

  public int logMessageID = Verifier.nondetInt();

  public int configTimer = Verifier.nondetInt();

  public int configMode = Verifier.nondetInt();

../sv-benchmarks/java/java-ranger-regression/alarm/impl/B.java
../sv-benchmarks/java/java-ranger-regression/alarm/impl/LogOutput.java
import org.sosy_lab.sv_benchmarks.Verifier;

  public int log = Verifier.nondetInt();

  public boolean loggingFailed = Verifier.nondetBoolean();

../sv-benchmarks/java/java-ranger-regression/alarm/impl/DW.java
../sv-benchmarks/java/java-ranger-regression/alarm/impl/DeviceSensorInputs.java
import org.sosy_lab.sv_benchmarks.Verifier;

  public int flowRate = Verifier.nondetInt();

  public boolean flowRateNotStable = Verifier.nondetBoolean();

  public boolean airInLine = Verifier.nondetBoolean();

  public boolean occlusion = Verifier.nondetBoolean();

  public boolean doorOpen = Verifier.nondetBoolean();

  public boolean temp = Verifier.nondetBoolean();

  public boolean airPressure = Verifier.nondetBoolean();

  public boolean humidity = Verifier.nondetBoolean();

  public boolean batteryDepleted = Verifier.nondetBoolean();

  public boolean batteryLow = Verifier.nondetBoolean();

  public boolean batteryUnableToCharge = Verifier.nondetBoolean();

  public boolean supplyVoltage = Verifier.nondetBoolean();

  public boolean cpuInError = Verifier.nondetBoolean();

  public boolean rtcInError = Verifier.nondetBoolean();

  public boolean watchdogInterrupted = Verifier.nondetBoolean();

  public boolean memoryCorrupted = Verifier.nondetBoolean();

  public boolean pumpTooHot = Verifier.nondetBoolean();

  public boolean pumpOverheated = Verifier.nondetBoolean();

  public boolean pumpPrimed = Verifier.nondetBoolean();

  public boolean postSuccessful = Verifier.nondetBoolean();

../sv-benchmarks/java/java-ranger-regression/alarm/impl/AlarmFunctional.java
../sv-benchmarks/java/java-ranger-regression/alarm/impl/AlarmOutputs.java
import org.sosy_lab.sv_benchmarks.Verifier;

  public int isAudioDisabled = Verifier.nondetInt();

  public int notificationMessage = Verifier.nondetInt();

  public int audioNotificationCommand = Verifier.nondetInt();

  public int highestLevelAlarm = Verifier.nondetInt();

  public int logMessageId = Verifier.nondetInt();

../sv-benchmarks/java/java-ranger-regression/alarm/impl/TopLevelModeOutputs.java
import org.sosy_lab.sv_benchmarks.Verifier;

  public boolean systemOn = Verifier.nondetBoolean();

  public boolean requestConfirmStop = Verifier.nondetBoolean();

  public int logMessageId = Verifier.nondetInt();

../sv-benchmarks/java/java-ranger-regression/alarm/impl/Divs32.java
../sv-benchmarks/java/java-ranger-regression/alarm/impl/SystemStatusOutputs.java
import org.sosy_lab.sv_benchmarks.Verifier;

  public boolean Reservoir_Empty = Verifier.nondetBoolean();

  public int reservoirVolume = Verifier.nondetInt();

  public int volumeInfused = Verifier.nondetInt();

  public int logMessageID = Verifier.nondetInt();

  public boolean inTherapy = Verifier.nondetBoolean();

../sv-benchmarks/java/java-ranger-regression/alarm/prop6/Main.java
../sv-benchmarks/java/java-ranger-regression/alarm/prop2/Main.java
../sv-benchmarks/java/java-ranger-regression/alarm/prop9/Main.java
../sv-benchmarks/java/java-ranger-regression/alarm/prop10/Main.java
../sv-benchmarks/java/java-ranger-regression/alarm/prop4/Main.java
../sv-benchmarks/java/java-ranger-regression/alarm/prop8/Main.java
../sv-benchmarks/java/java-ranger-regression/alarm/prop3/Main.java
../sv-benchmarks/java/java-ranger-regression/alarm/prop1/Main.java
../sv-benchmarks/java/java-ranger-regression/replace5_eqchk/impl/Replace.java
../sv-benchmarks/java/java-ranger-regression/replace5_eqchk/impl/Outputs.java
../sv-benchmarks/java/java-ranger-regression/replace5_eqchk/prop2/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    char c0 = Verifier.nondetChar();

    char c1 = Verifier.nondetChar();

    char c2 = Verifier.nondetChar();

    char c3 = Verifier.nondetChar();

    char c4 = Verifier.nondetChar();

../sv-benchmarks/java/java-ranger-regression/replace5_eqchk/prop1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    char c0 = Verifier.nondetChar();

    char c1 = Verifier.nondetChar();

    char c2 = Verifier.nondetChar();

    char c3 = Verifier.nondetChar();

    char c4 = Verifier.nondetChar();

../sv-benchmarks/java/java-ranger-regression/WBS/impl/WBS.java
../sv-benchmarks/java/java-ranger-regression/WBS/prop2/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

      PedalPos = Verifier.nondetInt();

      AutoBrake = Verifier.nondetBoolean();

      Skid = Verifier.nondetBoolean();

../sv-benchmarks/java/java-ranger-regression/WBS/prop4/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

      PedalPos = Verifier.nondetInt();

      AutoBrake = Verifier.nondetBoolean();

      Skid = Verifier.nondetBoolean();

../sv-benchmarks/java/java-ranger-regression/WBS/prop3/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

      PedalPos = Verifier.nondetInt();

      AutoBrake = Verifier.nondetBoolean();

      Skid = Verifier.nondetBoolean();

../sv-benchmarks/java/java-ranger-regression/WBS/prop1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

      PedalPos = Verifier.nondetInt();

      AutoBrake = Verifier.nondetBoolean();

      Skid = Verifier.nondetBoolean();

../sv-benchmarks/java/java-ranger-regression/nanoxml_eqchk/impl/XMLValidationException.java
../sv-benchmarks/java/java-ranger-regression/nanoxml_eqchk/impl/IXMLValidator.java
../sv-benchmarks/java/java-ranger-regression/nanoxml_eqchk/impl/IXMLReader.java
../sv-benchmarks/java/java-ranger-regression/nanoxml_eqchk/impl/ContentReader.java
../sv-benchmarks/java/java-ranger-regression/nanoxml_eqchk/impl/IXMLBuilder.java
../sv-benchmarks/java/java-ranger-regression/nanoxml_eqchk/impl/XMLElement.java
../sv-benchmarks/java/java-ranger-regression/nanoxml_eqchk/impl/XMLParserFactory.java
../sv-benchmarks/java/java-ranger-regression/nanoxml_eqchk/impl/XMLParseException.java
../sv-benchmarks/java/java-ranger-regression/nanoxml_eqchk/impl/DumpXML.java
../sv-benchmarks/java/java-ranger-regression/nanoxml_eqchk/impl/StdXMLBuilder.java
../sv-benchmarks/java/java-ranger-regression/nanoxml_eqchk/impl/XMLWriter.java
../sv-benchmarks/java/java-ranger-regression/nanoxml_eqchk/impl/IXMLParser.java
../sv-benchmarks/java/java-ranger-regression/nanoxml_eqchk/impl/NonValidator.java
../sv-benchmarks/java/java-ranger-regression/nanoxml_eqchk/impl/StdXMLParser.java
../sv-benchmarks/java/java-ranger-regression/nanoxml_eqchk/impl/IntReader.java
../sv-benchmarks/java/java-ranger-regression/nanoxml_eqchk/impl/StdXMLReader.java
../sv-benchmarks/java/java-ranger-regression/nanoxml_eqchk/prop2/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    char c0 = Verifier.nondetChar();

    char c1 = Verifier.nondetChar();

    char c2 = Verifier.nondetChar();

    char c3 = Verifier.nondetChar();

    char c4 = Verifier.nondetChar();

    char c5 = Verifier.nondetChar();

    char c6 = '<'; // Verifier.nondetChar();

    char c7 = '/'; // Verifier.nondetChar();

    char c8 = '>'; // Verifier.nondetChar();

../sv-benchmarks/java/java-ranger-regression/nanoxml_eqchk/prop3/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    char c0 = Verifier.nondetChar();

    char c1 = Verifier.nondetChar();

    char c2 = Verifier.nondetChar();

    char c3 = Verifier.nondetChar();

    char c4 = Verifier.nondetChar();

    char c5 = Verifier.nondetChar();

    char c6 = Verifier.nondetChar();

    char c7 = Verifier.nondetChar();

    char c8 = Verifier.nondetChar();

../sv-benchmarks/java/java-ranger-regression/nanoxml_eqchk/prop1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    char c0 = Verifier.nondetChar();

    char c1 = Verifier.nondetChar();

    char c2 = Verifier.nondetChar();

    char c3 = Verifier.nondetChar();

    char c4 = Verifier.nondetChar();

    char c5 = Verifier.nondetChar();

    char c6 = Verifier.nondetChar();

    char c7 = Verifier.nondetChar();

    char c8 = Verifier.nondetChar();

../sv-benchmarks/java/java-ranger-regression/infusion/prop5/Main.java
../sv-benchmarks/java/java-ranger-regression/infusion/impl/InfusionMgrFunctional.java
../sv-benchmarks/java/java-ranger-regression/infusion/impl/InfusionManagerOutputs.java
import org.sosy_lab.sv_benchmarks.Verifier;

  public int commandedFlowRate = Verifier.nondetInt();

  public int currentSystemMode = Verifier.nondetInt();

  public boolean newInfusion = Verifier.nondetBoolean();

  public int logMessageId = Verifier.nondetInt();

  public int actualInfusionDuration = Verifier.nondetInt();

../sv-benchmarks/java/java-ranger-regression/infusion/impl/OperatorCommands.java
import org.sosy_lab.sv_benchmarks.Verifier;

  public boolean systemStart = Verifier.nondetBoolean();

  public boolean systemStop = Verifier.nondetBoolean();

  public boolean infusionInitiate = Verifier.nondetBoolean();

  public boolean infusionInhibit = Verifier.nondetBoolean();

  public boolean infusionCancel = Verifier.nondetBoolean();

  public boolean dataConfig = Verifier.nondetBoolean();

  public boolean next = Verifier.nondetBoolean();

  public boolean back = Verifier.nondetBoolean();

  public boolean cancel = Verifier.nondetBoolean();

  public boolean keyboard = Verifier.nondetBoolean();

  public int disableAudio = Verifier.nondetInt();

  public boolean notificationCancel = Verifier.nondetBoolean();

  public int configurationType = Verifier.nondetInt();

  public boolean confirmStop = Verifier.nondetBoolean();

../sv-benchmarks/java/java-ranger-regression/infusion/impl/ConfigOutputs.java
import org.sosy_lab.sv_benchmarks.Verifier;

  public int patientId = Verifier.nondetInt();

  public int drugName = Verifier.nondetInt();

  public int drugConcentration = Verifier.nondetInt();

  public int infusionTotalDuration = Verifier.nondetInt();

  public int vtbiTotal = Verifier.nondetInt();

  public int flowRateBasal = Verifier.nondetInt();

  public int flowRateIntermittentBolus = Verifier.nondetInt();

  public int durationIntermittentBolus = Verifier.nondetInt();

  public int intervalIntermittentBolus = Verifier.nondetInt();

  public int flowRatePatientBolus = Verifier.nondetInt();

  public int durationPatientBolus = Verifier.nondetInt();

  public int lockoutPeriodPatientBolus = Verifier.nondetInt();

  public int maxNumberOfPatientBolus = Verifier.nondetInt();

  public int flowRateKVO = Verifier.nondetInt();

  public int enteredReservoirVolume = Verifier.nondetInt();

  public int reservoirVolume = Verifier.nondetInt();

  public int configured = Verifier.nondetInt();

  public int errorMessageID = Verifier.nondetInt();

  public boolean requestConfigType = Verifier.nondetBoolean();

  public boolean requestConfirmInfusionInitiate = Verifier.nondetBoolean();

  public boolean requestPatientDrugInfo = Verifier.nondetBoolean();

  public boolean requestInfusionInfo = Verifier.nondetBoolean();

  public int logMessageID = Verifier.nondetInt();

  public int configTimer = Verifier.nondetInt();

  public int configMode = Verifier.nondetInt();

../sv-benchmarks/java/java-ranger-regression/infusion/impl/B.java
../sv-benchmarks/java/java-ranger-regression/infusion/impl/DW.java
../sv-benchmarks/java/java-ranger-regression/infusion/impl/PatientInputs.java
import org.sosy_lab.sv_benchmarks.Verifier;

  public boolean patientBolusRequest = Verifier.nondetBoolean();

../sv-benchmarks/java/java-ranger-regression/infusion/impl/AlarmOutputs.java
import org.sosy_lab.sv_benchmarks.Verifier;

  public int isAudioDisabled = Verifier.nondetInt();

  public int notificationMessage = Verifier.nondetInt();

  public int audioNotificationCommand = Verifier.nondetInt();

  public int highestLevelAlarm = Verifier.nondetInt();

  public int logMessageId = Verifier.nondetInt();

../sv-benchmarks/java/java-ranger-regression/infusion/impl/TopLevelModeOutputs.java
import org.sosy_lab.sv_benchmarks.Verifier;

  public boolean systemOn = Verifier.nondetBoolean();

  public boolean requestConfirmStop = Verifier.nondetBoolean();

  public int logMessageID = Verifier.nondetInt();

../sv-benchmarks/java/java-ranger-regression/infusion/impl/SystemStatusOutputs.java
import org.sosy_lab.sv_benchmarks.Verifier;

  public boolean reservoirEmpty = Verifier.nondetBoolean();

  public int reservoirVolume = Verifier.nondetInt();

  public int volumeInfused = Verifier.nondetInt();

  public int logMessageId = Verifier.nondetInt();

  public boolean inTherapy = Verifier.nondetBoolean();

../sv-benchmarks/java/java-ranger-regression/infusion/prop6/Main.java
../sv-benchmarks/java/java-ranger-regression/infusion/prop7/Main.java
../sv-benchmarks/java/java-ranger-regression/infusion/prop2/Main.java
../sv-benchmarks/java/java-ranger-regression/infusion/prop9/Main.java
../sv-benchmarks/java/java-ranger-regression/infusion/prop10/Main.java
../sv-benchmarks/java/java-ranger-regression/infusion/prop4/Main.java
../sv-benchmarks/java/java-ranger-regression/infusion/prop8/Main.java
../sv-benchmarks/java/java-ranger-regression/infusion/prop3/Main.java
../sv-benchmarks/java/java-ranger-regression/infusion/prop1/Main.java
../sv-benchmarks/java/java-ranger-regression/infusion/prop11/Main.java
../sv-benchmarks/java/java-ranger-regression/infusion/prop12/Main.java
../sv-benchmarks/java/java-ranger-regression/infusion/prop13/Main.java
../sv-benchmarks/java/java-ranger-regression/schedule_eqchk/Process.java
../sv-benchmarks/java/java-ranger-regression/schedule_eqchk/TestSchedule2.java
import org.sosy_lab.sv_benchmarks.Verifier;

    in0 = Verifier.nondetInt();

    in1 = Verifier.nondetInt();

    in2 = Verifier.nondetInt();

../sv-benchmarks/java/java-ranger-regression/schedule_eqchk/Main.java
../sv-benchmarks/java/java-ranger-regression/schedule_eqchk/Queue.java
../sv-benchmarks/java/java-ranger-regression/schedule_eqchk/Schedule2.java
../sv-benchmarks/java/java-ranger-regression/siena_eqchk/impl/Filter.java
../sv-benchmarks/java/java-ranger-regression/siena_eqchk/impl/SENPPacket.java
../sv-benchmarks/java/java-ranger-regression/siena_eqchk/impl/Event.java
../sv-benchmarks/java/java-ranger-regression/siena_eqchk/impl/SENP.java
../sv-benchmarks/java/java-ranger-regression/siena_eqchk/impl/AttributeConstraint.java
../sv-benchmarks/java/java-ranger-regression/siena_eqchk/impl/SENPDriver.java
../sv-benchmarks/java/java-ranger-regression/siena_eqchk/impl/SENPInvalidFormat.java
../sv-benchmarks/java/java-ranger-regression/siena_eqchk/impl/Tokenizer.java
../sv-benchmarks/java/java-ranger-regression/siena_eqchk/impl/ByteBuf.java
../sv-benchmarks/java/java-ranger-regression/siena_eqchk/impl/AttributeValue.java
../sv-benchmarks/java/java-ranger-regression/siena_eqchk/prop2/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int in0 = Verifier.nondetInt();

    int in1 = Verifier.nondetInt();

    int in2 = Verifier.nondetInt();

    int in3 = Verifier.nondetInt();

    int in4 = Verifier.nondetInt();

    int in5 = Verifier.nondetInt();

    int in6 = Verifier.nondetInt();

    int in7 = Verifier.nondetInt();

    int in8 = Verifier.nondetInt();

../sv-benchmarks/java/java-ranger-regression/siena_eqchk/prop1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int in0 = Verifier.nondetInt();

    int in1 = Verifier.nondetInt();

    int in2 = Verifier.nondetInt();

    int in3 = Verifier.nondetInt();

    int in4 = Verifier.nondetInt();

    int in5 = Verifier.nondetInt();

    int in6 = Verifier.nondetInt();

    int in7 = Verifier.nondetInt();

    int in8 = Verifier.nondetInt();

../sv-benchmarks/java/java-ranger-regression/printtokens_eqchk/impl/PrintTokens2.java
../sv-benchmarks/java/java-ranger-regression/printtokens_eqchk/impl/TokenStream.java
../sv-benchmarks/java/java-ranger-regression/printtokens_eqchk/impl/IntReader.java
../sv-benchmarks/java/java-ranger-regression/printtokens_eqchk/prop2/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    char c0 = Verifier.nondetChar();

    char c1 = Verifier.nondetChar();

    char c2 = Verifier.nondetChar();

    char c3 = Verifier.nondetChar();

    char c4 = Verifier.nondetChar();

    char c5 = Verifier.nondetChar();

    char c6 = Verifier.nondetChar();

    char c7 = Verifier.nondetChar();

../sv-benchmarks/java/java-ranger-regression/printtokens_eqchk/prop1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    char c0 = Verifier.nondetChar();

    char c1 = Verifier.nondetChar();

    char c2 = Verifier.nondetChar();

    char c3 = Verifier.nondetChar();

    char c4 = Verifier.nondetChar();

    char c5 = Verifier.nondetChar();

    char c6 = Verifier.nondetChar();

    char c7 = Verifier.nondetChar();

../sv-benchmarks/java/common/org/sosy_lab/sv_benchmarks/Verifier.java
public final class Verifier {

../sv-benchmarks/java/jbmc-regression/recursion2/Main.java
../sv-benchmarks/java/jbmc-regression/StaticCharMethods03/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String arg = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/if_icmp1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int i = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/StringStartEnd01/Main.java
../sv-benchmarks/java/jbmc-regression/return1/Main.java
../sv-benchmarks/java/jbmc-regression/NullPointerException4/Main.java
../sv-benchmarks/java/jbmc-regression/StringCompare02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String s3 = Verifier.nondetString();

    String s4 = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/if_expr1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/exceptions16/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/putstatic_getstatic1/Main.java
../sv-benchmarks/java/jbmc-regression/overloading1/Main.java
../sv-benchmarks/java/jbmc-regression/instanceof5/Main.java
../sv-benchmarks/java/jbmc-regression/ArithmeticException5/Main.java
../sv-benchmarks/java/jbmc-regression/StringBuilderAppend02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    Object objectRef = Verifier.nondetString();

    String string = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/boolean1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    boolean my_boolean = Verifier.nondetBoolean();

../sv-benchmarks/java/jbmc-regression/StaticCharMethods01/Main.java
../sv-benchmarks/java/jbmc-regression/StringCompare04/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String s1 = new String(Verifier.nondetString());

    String s2 = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/exceptions1/Main.java
../sv-benchmarks/java/jbmc-regression/charArray/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String arg = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/SubString02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String letters = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/StringBuilderInsertDelete01/Main.java
../sv-benchmarks/java/jbmc-regression/swap1/Main.java
../sv-benchmarks/java/jbmc-regression/StringBuilderChars06/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    StringBuilder buffer = new StringBuilder(Verifier.nondetString());

../sv-benchmarks/java/jbmc-regression/ArithmeticException1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

      int i = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/athrow1/Main.java
../sv-benchmarks/java/jbmc-regression/assert6/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int i = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/StringBuilderConstructors02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String arg = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/arraylength1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int size = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/StringBuilderInsertDelete03/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    Object objectRef = Verifier.nondetString();

    String string = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/StringValueOf07/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    long longValue = Verifier.nondetLong();

../sv-benchmarks/java/jbmc-regression/Validate02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String address = Verifier.nondetString();

    String city = Verifier.nondetString();

    String state = Verifier.nondetString();

    String zip = Verifier.nondetString();

    String phone = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/Validate02/ValidateInput02.java
../sv-benchmarks/java/jbmc-regression/assert1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int i = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/Validate01/ValidateInput01.java
../sv-benchmarks/java/jbmc-regression/Validate01/Main.java
../sv-benchmarks/java/jbmc-regression/StringValueOf03/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    args[0] = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/RegexSubstitution01/Main.java
../sv-benchmarks/java/jbmc-regression/StringCompare05/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String string = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/exceptions2/Main.java
../sv-benchmarks/java/jbmc-regression/long1/Main.java
../sv-benchmarks/java/jbmc-regression/StringConstructors03/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    args[0] = Verifier.nondetString();

    args[1] = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/StringContains02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String arg = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/StringCompare01/Main.java
../sv-benchmarks/java/jbmc-regression/RegexMatches01/Main.java
../sv-benchmarks/java/jbmc-regression/TokenTest02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String sentence = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/StringMiscellaneous04/Main.java
../sv-benchmarks/java/jbmc-regression/exceptions13/Main.java
../sv-benchmarks/java/jbmc-regression/bug-test-gen-119-2/Main.java
../sv-benchmarks/java/jbmc-regression/StringConstructors01/Main.java
../sv-benchmarks/java/jbmc-regression/instanceof2/Main.java
../sv-benchmarks/java/jbmc-regression/lookupswitch1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    i = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/ArrayIndexOutOfBoundsException3/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

      a[Verifier.nondetInt()] = 0;

../sv-benchmarks/java/jbmc-regression/interface1/Main.java
../sv-benchmarks/java/jbmc-regression/NullPointerException1/Main.java
../sv-benchmarks/java/jbmc-regression/NullPointerException2/Main.java
../sv-benchmarks/java/jbmc-regression/NullPointerException3/Main.java
../sv-benchmarks/java/jbmc-regression/StringValueOf02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String arg = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/bug-test-gen-095/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    StringBuilder sb = new StringBuilder(Verifier.nondetString());

../sv-benchmarks/java/jbmc-regression/RegexMatches02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String string1 = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/exceptions7/Main.java
../sv-benchmarks/java/jbmc-regression/StringValueOf04/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    boolean booleanValue = Verifier.nondetBoolean();

../sv-benchmarks/java/jbmc-regression/StringMiscellaneous02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String s1 = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/SubString01/Main.java
../sv-benchmarks/java/jbmc-regression/ClassCastException3/Main.java
../sv-benchmarks/java/jbmc-regression/classtest1/Main.java
../sv-benchmarks/java/jbmc-regression/ClassCastException1/Main.java
../sv-benchmarks/java/jbmc-regression/CharSequenceBug/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String s = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/exceptions10/Main.java
../sv-benchmarks/java/jbmc-regression/StringBuilderAppend01/Main.java
../sv-benchmarks/java/jbmc-regression/virtual2/Main.java
../sv-benchmarks/java/jbmc-regression/assert3/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int i = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/StaticCharMethods02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String arg = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/exceptions11/Main.java
../sv-benchmarks/java/jbmc-regression/exceptions14/Main.java
../sv-benchmarks/java/jbmc-regression/synchronized/Main.java
../sv-benchmarks/java/jbmc-regression/instanceof6/Main.java
../sv-benchmarks/java/jbmc-regression/return2/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int v1 = Verifier.nondetInt();

    int v2 = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/instanceof1/Main.java
../sv-benchmarks/java/jbmc-regression/constructor1/Main.java
../sv-benchmarks/java/jbmc-regression/lazyloading4/Main.java
../sv-benchmarks/java/jbmc-regression/putfield_getfield1/Main.java
../sv-benchmarks/java/jbmc-regression/StringConcatenation02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    args[0] = Verifier.nondetString();

    args[1] = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/StringValueOf10/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String arg = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/exceptions18/Main.java
../sv-benchmarks/java/jbmc-regression/StringBuilderCapLen02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    StringBuilder buffer = new StringBuilder(Verifier.nondetString());

../sv-benchmarks/java/jbmc-regression/Inheritance1/Main.java
../sv-benchmarks/java/jbmc-regression/ifxx1/Main.java
../sv-benchmarks/java/jbmc-regression/StringIndexMethods04/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String letters = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/const1/Main.java
../sv-benchmarks/java/jbmc-regression/StringBuilderChars02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    StringBuilder buffer = new StringBuilder(Verifier.nondetString());

../sv-benchmarks/java/jbmc-regression/StringConstructors04/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String arg = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/StringValueOf05/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    args[0] = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/TokenTest01/Main.java
../sv-benchmarks/java/jbmc-regression/StringValueOf09/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String arg = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/exceptions15/Main.java
../sv-benchmarks/java/jbmc-regression/StringValueOf08/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String arg = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/StringIndexMethods03/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String letters = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/StringMiscellaneous03/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String s1 = Verifier.nondetString();

    String s2 = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/astore_aload1/Main.java
../sv-benchmarks/java/jbmc-regression/exceptions8/Main.java
../sv-benchmarks/java/jbmc-regression/StringBuilderConstructors01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String arg = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/calc/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int size = Verifier.nondetInt();

    args[0] = Verifier.nondetString();

    args[1] = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/StringStartEnd03/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    strings[0] = Verifier.nondetString();

    strings[1] = Verifier.nondetString();

    strings[2] = Verifier.nondetString();

    strings[3] = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/enum1/Main.java
../sv-benchmarks/java/jbmc-regression/StringMiscellaneous01/Main.java
../sv-benchmarks/java/jbmc-regression/StringConcatenation04/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String s1 = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/StaticCharMethods04/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    char c = Verifier.nondetChar();

../sv-benchmarks/java/jbmc-regression/StaticCharMethods05/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    Scanner scanner = new Scanner(Verifier.nondetString());

../sv-benchmarks/java/jbmc-regression/StringContains01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String ab = Verifier.nondetString();

    String s = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/package1/Main.java
../sv-benchmarks/java/jbmc-regression/package1/mypackage/classB.java
../sv-benchmarks/java/jbmc-regression/exceptions9/Main.java
../sv-benchmarks/java/jbmc-regression/exceptions5/Main.java
../sv-benchmarks/java/jbmc-regression/StringBuilderInsertDelete02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    Object objectRef = Verifier.nondetString();

    String string = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/fcmpx_dcmpx1/Main.java
../sv-benchmarks/java/jbmc-regression/arrayread1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int c = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/StringIndexMethods02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String letters = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/catch1/Main.java
../sv-benchmarks/java/jbmc-regression/RegexSubstitution03/Main.java
../sv-benchmarks/java/jbmc-regression/uninitialised1/Main.java
../sv-benchmarks/java/jbmc-regression/aastore_aaload1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int size = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/StringBuilderCapLen03/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    StringBuilder buffer = new StringBuilder(Verifier.nondetString());

../sv-benchmarks/java/jbmc-regression/exceptions6/Main.java
../sv-benchmarks/java/jbmc-regression/if_acmp1/Main.java
../sv-benchmarks/java/jbmc-regression/exceptions12/Main.java
../sv-benchmarks/java/jbmc-regression/instanceof4/Main.java
../sv-benchmarks/java/jbmc-regression/virtual4/Main.java
../sv-benchmarks/java/jbmc-regression/iarith1/Main.java
../sv-benchmarks/java/jbmc-regression/StringBuilderChars03/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    StringBuilder buffer = new StringBuilder(Verifier.nondetString());

../sv-benchmarks/java/jbmc-regression/array2/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int unknown = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/cast1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int i = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/boolean2/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    boolean b = Verifier.nondetBoolean();

../sv-benchmarks/java/jbmc-regression/StringConcatenation03/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String s1 = Verifier.nondetString();

    String s2 = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/instanceof3/Main.java
../sv-benchmarks/java/jbmc-regression/instanceof8/Main.java
../sv-benchmarks/java/jbmc-regression/StringValueOf06/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int integerValue = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/StringConstructors02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    assert s1.equals(Verifier.nondetString());

../sv-benchmarks/java/jbmc-regression/bug-test-gen-119/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    boolean booleanValue = Verifier.nondetBoolean();

../sv-benchmarks/java/jbmc-regression/BufferedReaderReadLine/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String arg = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/multinewarray/Main.java
../sv-benchmarks/java/jbmc-regression/java_append_char/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    boolean b = Verifier.nondetBoolean();

../sv-benchmarks/java/jbmc-regression/ArithmeticException6/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int denom = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/StringBuilderChars05/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String arg = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/StringBuilderCapLen04/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    StringBuilder buffer = new StringBuilder(Verifier.nondetString());

../sv-benchmarks/java/jbmc-regression/bitwise1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    c = (char) (Verifier.nondetInt() * 2 + 1);

../sv-benchmarks/java/jbmc-regression/virtual1/Main.java
../sv-benchmarks/java/jbmc-regression/CharSequenceToString/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String arg = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/exceptions4/Main.java
../sv-benchmarks/java/jbmc-regression/StringBuilderCapLen01/Main.java
../sv-benchmarks/java/jbmc-regression/NegativeArraySizeException1/Main.java
../sv-benchmarks/java/jbmc-regression/ClassCastException2/Main.java
../sv-benchmarks/java/jbmc-regression/StringValueOf01/Main.java
../sv-benchmarks/java/jbmc-regression/NegativeArraySizeException2/Main.java
../sv-benchmarks/java/jbmc-regression/store_load1/Main.java
../sv-benchmarks/java/jbmc-regression/StringBuilderChars04/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    StringBuilder buffer = new StringBuilder(Verifier.nondetString());

../sv-benchmarks/java/jbmc-regression/StringIndexMethods01/Main.java
../sv-benchmarks/java/jbmc-regression/tableswitch1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    i = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/StringCompare03/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String s3 = Verifier.nondetString();

    String s4 = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/iarith2/Main.java
../sv-benchmarks/java/jbmc-regression/exceptions3/Main.java
../sv-benchmarks/java/jbmc-regression/list1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/StringStartEnd02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    strings[0] = Verifier.nondetString();

    strings[1] = Verifier.nondetString();

    strings[2] = Verifier.nondetString();

    strings[3] = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/ArrayIndexOutOfBoundsException2/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int size = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/Class_method1/Main.java
../sv-benchmarks/java/jbmc-regression/assert2/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int i = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/StaticCharMethods06/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String arg = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/array1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int size = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/array1/what_not.java
../sv-benchmarks/java/jbmc-regression/char1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String arg = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/StringConstructors05/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    assert s3.equals(Verifier.nondetString());

../sv-benchmarks/java/jbmc-regression/instanceof7/Main.java
../sv-benchmarks/java/jbmc-regression/SubString03/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String letters = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/StringBuilderChars01/Main.java
../sv-benchmarks/java/jbmc-regression/RegexSubstitution02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String firstString = Verifier.nondetString();

    String secondString = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/StringConcatenation01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    args[0] = Verifier.nondetString();

    args[1] = Verifier.nondetString();

../sv-benchmarks/java/jbmc-regression/assert5/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int i = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/basic1/Main.java
../sv-benchmarks/java/jbmc-regression/assert4/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int i = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/ArrayIndexOutOfBoundsException1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int size = Verifier.nondetInt();

../sv-benchmarks/java/jbmc-regression/virtual_function_unwinding/Main.java
../sv-benchmarks/java/jbmc-regression/StringIndexMethods05/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String letters = Verifier.nondetString();

../sv-benchmarks/java/MinePump/spec1-5_product26/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product26/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product26/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product26/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product58/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product58/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product58/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product58/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product12/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product12/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product12/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product12/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product35/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product35/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product35/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product35/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product14/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product14/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product14/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product14/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product51/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product51/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product51/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product51/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product25/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product25/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product25/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product25/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product55/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product55/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product55/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product55/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product38/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product38/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product38/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product38/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product50/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product50/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product50/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product50/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product31/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product31/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product31/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product31/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product9/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product9/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product9/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product9/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product32/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product32/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product32/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product32/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product22/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product22/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product22/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product22/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product34/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product34/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product34/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product34/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product21/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product21/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product21/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product21/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product28/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product28/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product28/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product28/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product29/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product29/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product29/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product29/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product19/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product19/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product19/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product19/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product52/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product52/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product52/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product52/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product61/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product61/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product61/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product61/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product48/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product48/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product48/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product48/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product47/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product47/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product47/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product47/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product27/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product27/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product27/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product27/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product43/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product43/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product43/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product43/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product30/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product30/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product30/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product30/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product53/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product53/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product53/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product53/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product60/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product60/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product60/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product60/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product56/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product56/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product56/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product56/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product5/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product5/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product5/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product5/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product4/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product4/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product4/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product4/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product62/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product62/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product62/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product62/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product13/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product13/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product13/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product13/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product2/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product2/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product2/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product2/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product33/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product33/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product33/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product33/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product54/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product54/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product54/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product54/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product63/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product63/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product63/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product63/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product18/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product18/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product18/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product18/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product3/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product3/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product3/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product3/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product64/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product64/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product64/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product64/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product41/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product41/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product41/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product41/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product57/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product57/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product57/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product57/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product42/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product42/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product42/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product42/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product45/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product45/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product45/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product45/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product17/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product17/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product17/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product17/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product16/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product16/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product16/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product16/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product20/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product20/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product20/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product20/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product59/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product59/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product59/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product59/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product1/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product1/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product1/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product1/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product44/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product44/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product44/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product44/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product40/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product40/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product40/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product40/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product8/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product8/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product8/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product8/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product46/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product46/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product46/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product46/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product10/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product10/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product10/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product10/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product24/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product24/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product24/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product24/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product11/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product11/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product11/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product11/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product36/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product36/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product36/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product36/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product15/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product15/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product15/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product15/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product37/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product37/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product37/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product37/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product39/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product39/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product39/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product39/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product7/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product7/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product7/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product7/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product6/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product6/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product6/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product6/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product23/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product23/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product23/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product23/MinePumpSystem/Environment.java
../sv-benchmarks/java/MinePump/spec1-5_product49/Actions.java
../sv-benchmarks/java/MinePump/spec1-5_product49/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetBoolean();

../sv-benchmarks/java/MinePump/spec1-5_product49/MinePumpSystem/MinePump.java
../sv-benchmarks/java/MinePump/spec1-5_product49/MinePumpSystem/Environment.java
../sv-benchmarks/java/jdart-regression/addition01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int m = Verifier.nondetInt();

    int n = Verifier.nondetInt();

../sv-benchmarks/java/jdart-regression/startswith/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    if (Verifier.nondetString() != null) {

    String request = Verifier.nondetString();

../sv-benchmarks/java/jdart-regression/boundcheck100/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

../sv-benchmarks/java/jdart-regression/boundcheck200/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

../sv-benchmarks/java/jdart-regression/shifting3/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int i = Verifier.nondetInt();

../sv-benchmarks/java/jdart-regression/URLDecoder01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String s1 = "some-url+" + Verifier.nondetString();

../sv-benchmarks/java/jdart-regression/URLDecoder02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String s1 = Verifier.nondetString() + "some-url";

../sv-benchmarks/java/jdart-regression/radians/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    double deg = Verifier.nondetDouble();

../sv-benchmarks/java/jdart-regression/list2/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetInt();

../sv-benchmarks/java/jdart-regression/OverapproximationString01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    String input = Verifier.nondetString();

../sv-benchmarks/java/jdart-regression/shifting2/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int i = Verifier.nondetInt();

../sv-benchmarks/java/jdart-regression/array-iteration01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int index = Verifier.nondetInt();

    Verifier.assume(0 <= index && index < ia.length);

    ia[index] = Verifier.nondetInt();

../sv-benchmarks/java/jdart-regression/double2long/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    double x = Verifier.nondetDouble();

../sv-benchmarks/java/jdart-regression/float/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    float a = Verifier.nondetFloat();

    float b = Verifier.nondetFloat();

../sv-benchmarks/java/jdart-regression/boundcheck30/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

../sv-benchmarks/java/jdart-regression/shifting/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int i = Verifier.nondetInt();

../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_connect_tcp_divide_81a_good/CWE369_Divide_by_Zero__float_connect_tcp_divide_81_goodB2G.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_connect_tcp_divide_81a_good/Main.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_connect_tcp_divide_81a_good/CWE369_Divide_by_Zero__float_connect_tcp_divide_81_goodG2B.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_connect_tcp_divide_81a_good/CWE369_Divide_by_Zero__float_connect_tcp_divide_81_bad.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_connect_tcp_divide_81a_good/CWE369_Divide_by_Zero__float_connect_tcp_divide_81_base.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_console_readLine_divide_54_bad_version2/CWE369_Divide_by_Zero__float_console_readLine_divide_54c.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_console_readLine_divide_54_bad_version2/Main.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_console_readLine_divide_54_bad_version2/CWE369_Divide_by_Zero__float_console_readLine_divide_54d.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_console_readLine_divide_54_bad_version2/CWE369_Divide_by_Zero__float_console_readLine_divide_54b.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_console_readLine_divide_54_bad_version2/CWE369_Divide_by_Zero__float_console_readLine_divide_54e.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_connect_tcp_divide_81a_bad_version2/CWE369_Divide_by_Zero__float_connect_tcp_divide_81_goodB2G.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_connect_tcp_divide_81a_bad_version2/Main.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_connect_tcp_divide_81a_bad_version2/CWE369_Divide_by_Zero__float_connect_tcp_divide_81_goodG2B.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_connect_tcp_divide_81a_bad_version2/CWE369_Divide_by_Zero__float_connect_tcp_divide_81_bad.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_connect_tcp_divide_81a_bad_version2/CWE369_Divide_by_Zero__float_connect_tcp_divide_81_base.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_console_readLine_divide_54_good/CWE369_Divide_by_Zero__float_console_readLine_divide_54c.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_console_readLine_divide_54_good/Main.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_console_readLine_divide_54_good/CWE369_Divide_by_Zero__float_console_readLine_divide_54d.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_console_readLine_divide_54_good/CWE369_Divide_by_Zero__float_console_readLine_divide_54b.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_console_readLine_divide_54_good/CWE369_Divide_by_Zero__float_console_readLine_divide_54e.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_console_readLine_divide_54_bad/CWE369_Divide_by_Zero__float_console_readLine_divide_54c.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_console_readLine_divide_54_bad/Main.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_console_readLine_divide_54_bad/CWE369_Divide_by_Zero__float_console_readLine_divide_54d.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_console_readLine_divide_54_bad/CWE369_Divide_by_Zero__float_console_readLine_divide_54b.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_console_readLine_divide_54_bad/CWE369_Divide_by_Zero__float_console_readLine_divide_54e.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_connect_tcp_divide_01_bad_version2/Main.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_connect_tcp_divide_01_bad/Main.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_connect_tcp_divide_01_good/Main.java
../sv-benchmarks/java/juliet-java/testcasesupport/testcasesupport/IO.java
../sv-benchmarks/java/juliet-java/testcasesupport/testcasesupport/BufferedReader.java
import org.sosy_lab.sv_benchmarks.Verifier;

    return Verifier.nondetString();

../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_connect_tcp_divide_81a_bad/CWE369_Divide_by_Zero__float_connect_tcp_divide_81_goodB2G.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_connect_tcp_divide_81a_bad/Main.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_connect_tcp_divide_81a_bad/CWE369_Divide_by_Zero__float_connect_tcp_divide_81_goodG2B.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_connect_tcp_divide_81a_bad/CWE369_Divide_by_Zero__float_connect_tcp_divide_81_bad.java
../sv-benchmarks/java/juliet-java/CWE369_Divide_by_Zero__float_connect_tcp_divide_81a_bad/CWE369_Divide_by_Zero__float_connect_tcp_divide_81_base.java
../sv-benchmarks/java/algorithms/RedBlackTree-MemSat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int N = Verifier.nondetInt();

    Verifier.assume(N > 0);

        int data = Verifier.nondetInt();

      int data = Verifier.nondetInt();

../sv-benchmarks/java/algorithms/RedBlackTree-MemSat01/rbtree/RedBlackTreeNode.java
../sv-benchmarks/java/algorithms/RedBlackTree-MemSat01/rbtree/Node.java
../sv-benchmarks/java/algorithms/RedBlackTree-MemSat01/rbtree/RedBlackTree.java
../sv-benchmarks/java/algorithms/MergeSortIterative-MemSat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int N = Verifier.nondetInt();

    Verifier.assume(N > 0);

    for (int i = 0; i < a.length; i++) a[i] = Verifier.nondetInt();

../sv-benchmarks/java/algorithms/Trie-FunSat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int val = Verifier.nondetInt();

../sv-benchmarks/java/algorithms/BellmanFord-MemSat02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int V = Verifier.nondetInt();

    Verifier.assume(V > 0 && V < 1000000);

        int tmp = Verifier.nondetInt();

        Verifier.assume(tmp >= 0 && tmp < 1000000);

../sv-benchmarks/java/algorithms/RedBlackTree-FunUnsat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int N = Verifier.nondetInt();

    Verifier.assume(N > 0);

../sv-benchmarks/java/algorithms/RedBlackTree-FunUnsat01/rbtree/RedBlackTreeNode.java
../sv-benchmarks/java/algorithms/RedBlackTree-FunUnsat01/rbtree/Node.java
../sv-benchmarks/java/algorithms/RedBlackTree-FunUnsat01/rbtree/RedBlackTree.java
../sv-benchmarks/java/algorithms/BellmanFord-FunUnsat02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int V = Verifier.nondetInt();

    Verifier.assume(V > 0 && V < 1000000);

        int tmp = Verifier.nondetInt();

        Verifier.assume(tmp >= 0 && tmp < 1000000);

../sv-benchmarks/java/algorithms/MergeSortIterative-FunUnsat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int N = Verifier.nondetInt();

    Verifier.assume(N > 0);

      data[i] = Verifier.nondetInt();

    for (int i = 0; i < a.length; i++) a[i] = Verifier.nondetInt();

../sv-benchmarks/java/algorithms/MergeSortIterative-FunSat02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int N = Verifier.nondetInt();

    Verifier.assume(N > 0);

    int i1 = Verifier.nondetInt();

    int i2 = Verifier.nondetInt();

    Verifier.assume(0 <= i1 && i1 < i2 && i2 < N);

../sv-benchmarks/java/algorithms/BellmanFord-FunSat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int V = Verifier.nondetInt();

    Verifier.assume(V > 0 && V < 46341); // V*V < Integer.MAX_VALUE

        int tmp = Verifier.nondetInt();

        Verifier.assume(tmp >= 0 && tmp < V);

../sv-benchmarks/java/algorithms/SortedListInsert-FunSat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int N = Verifier.nondetInt();

    Verifier.assume(N > 1);

    for (int i = 0; i < N; i++) list.insert(Verifier.nondetInt());

../sv-benchmarks/java/algorithms/MergeSortIterative-FunSat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int N = Verifier.nondetInt();

    Verifier.assume(N > 0);

../sv-benchmarks/java/algorithms/RedBlackTree-FunSat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int N = Verifier.nondetInt();

    Verifier.assume(N > 0);

    int data = Verifier.nondetInt();

    Verifier.assume(data >= 0 && data < N);

../sv-benchmarks/java/algorithms/RedBlackTree-FunSat01/rbtree/RedBlackTreeNode.java
../sv-benchmarks/java/algorithms/RedBlackTree-FunSat01/rbtree/Node.java
../sv-benchmarks/java/algorithms/RedBlackTree-FunSat01/rbtree/RedBlackTree.java
../sv-benchmarks/java/algorithms/Tsp-FunUnsat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int N = Verifier.nondetInt();

    Verifier.assume(N > 0);

        int next = Verifier.nondetInt();

        Verifier.assume(next >= 0);

../sv-benchmarks/java/algorithms/BellmanFord-FunUnsat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int V = Verifier.nondetInt();

    Verifier.assume(V > 0 && V < 1000000);

        int tmp = Verifier.nondetInt();

        Verifier.assume(tmp >= 0 && tmp < 1000000);

../sv-benchmarks/java/algorithms/BinaryTreeSearch-FunSat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int N = Verifier.nondetInt();

      int n = Verifier.nondetInt();

    int v = Verifier.nondetInt();

    Verifier.assume(v < 0);

../sv-benchmarks/java/algorithms/InsertionSort-FunUnsat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int N = Verifier.nondetInt();

    Verifier.assume(N > 0);

      a[i] = Verifier.nondetInt();

../sv-benchmarks/java/algorithms/BellmanFord-MemUnsat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int V = Verifier.nondetInt();

    Verifier.assume(V > 0 && V < 1000000);

        int tmp = Verifier.nondetInt();

        Verifier.assume(tmp >= 0 && tmp < 1000000);

../sv-benchmarks/java/algorithms/Tsp-MemSat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int N = Verifier.nondetInt();

    Verifier.assume(N > 0);

        int next = Verifier.nondetInt();

        Verifier.assume(next >= 0);

../sv-benchmarks/java/algorithms/InsertionSort-MemSat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int N = Verifier.nondetInt();

    Verifier.assume(N > 0);

../sv-benchmarks/java/algorithms/SortedListInsert-MemSat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int N = Verifier.nondetInt();

      for (int i = 0; i < N; i++) list.insert(Verifier.nondetInt());

../sv-benchmarks/java/algorithms/SortedListInsert-MemUnsat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int N = Verifier.nondetInt();

      for (int i = 0; i < N; i++) list.insert(Verifier.nondetInt());

../sv-benchmarks/java/algorithms/MergeSortIterative-MemUnsat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int N = Verifier.nondetInt();

    Verifier.assume(N > 0);

    for (int i = 0; i < a.length; i++) a[i] = Verifier.nondetInt();

../sv-benchmarks/java/algorithms/Tsp-MemUnsat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int N = Verifier.nondetInt();

    Verifier.assume(N > 0);

        int next = Verifier.nondetInt();

        Verifier.assume(next >= 0);

../sv-benchmarks/java/algorithms/BinaryTreeSearch-MemSat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int N = Verifier.nondetInt();

      for (int i = 1; i < N; i++) b.insert(Verifier.nondetInt());

      b.search(Verifier.nondetInt());

../sv-benchmarks/java/algorithms/RedBlackTree-MemUnsat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int N = Verifier.nondetInt();

    Verifier.assume(N > 0);

        int data = Verifier.nondetInt();

      int data = Verifier.nondetInt();

../sv-benchmarks/java/algorithms/RedBlackTree-MemUnsat01/rbtree/RedBlackTreeNode.java
../sv-benchmarks/java/algorithms/RedBlackTree-MemUnsat01/rbtree/Node.java
../sv-benchmarks/java/algorithms/RedBlackTree-MemUnsat01/rbtree/RedBlackTree.java
../sv-benchmarks/java/algorithms/BinaryTreeSearch-MemUnsat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int N = Verifier.nondetInt();

        b.insert(Verifier.nondetInt());

      b.search(Verifier.nondetInt());

../sv-benchmarks/java/algorithms/BinaryTreeSearch-MemUnsat02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int N = Verifier.nondetInt();

      for (int i = 1; i < N; i++) b.insert(Verifier.nondetInt());

      b.search(Verifier.nondetInt());

../sv-benchmarks/java/algorithms/Trie-FunUnsat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int val = Verifier.nondetInt();

../sv-benchmarks/java/algorithms/Trie-MemUnsat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

      st.put(test, Verifier.nondetInt());

../sv-benchmarks/java/algorithms/InsertionSort-FunSat02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int N = Verifier.nondetInt();

    Verifier.assume(N > 0);

    int i1 = Verifier.nondetInt();

    int i2 = Verifier.nondetInt();

    Verifier.assume(0 <= i1 && i1 < i2 && i2 < N);

../sv-benchmarks/java/algorithms/InsertionSort-FunSat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int N = Verifier.nondetInt();

    Verifier.assume(N > 0);

../sv-benchmarks/java/algorithms/SortedListInsert-FunUnsat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int N = Verifier.nondetInt();

    Verifier.assume(N > 1);

    for (int i = 0; i < N; i++) list.insert(Verifier.nondetInt());

../sv-benchmarks/java/algorithms/SortedListInsert-FunSat02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int N = Verifier.nondetInt();

    Verifier.assume(N > 1);

      list.insert(Verifier.nondetInt());

../sv-benchmarks/java/algorithms/Trie-MemSat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

      st.put(test, Verifier.nondetInt());

../sv-benchmarks/java/algorithms/BinaryTreeSearch-FunUnsat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int N = Verifier.nondetInt();

      int n = Verifier.nondetInt();

../sv-benchmarks/java/algorithms/BellmanFord-MemSat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int V = Verifier.nondetInt();

    Verifier.assume(V > 0 && V < 46341); // V*V < Integer.MAX_VALUE

        int tmp = Verifier.nondetInt();

        Verifier.assume(tmp >= 0 && tmp < 46341);

../sv-benchmarks/java/algorithms/BellmanFord-FunSat02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int V = Verifier.nondetInt();

    Verifier.assume(V > 0 && V < 1000000);

        int tmp = Verifier.nondetInt();

        Verifier.assume(tmp >= 0 && tmp < 1000000);

../sv-benchmarks/java/algorithms/BellmanFord-MemUnsat02/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int V = Verifier.nondetInt();

    Verifier.assume(V > 0);

        D[i][j] = Verifier.nondetInt();

../sv-benchmarks/java/algorithms/Tsp-FunSat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    final int N = Verifier.nondetInt();

    Verifier.assume(N > 0);

        int next = Verifier.nondetInt();

        Verifier.assume(next >= 0);

../sv-benchmarks/java/algorithms/InsertionSort-MemUnsat01/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int N = Verifier.nondetInt();

    Verifier.assume(N > 0);

../sv-benchmarks/java/rtems-lock-model/lock-00-01-10/Main.java
../sv-benchmarks/java/rtems-lock-model/lock-00-01-10/base/Lock.java
../sv-benchmarks/java/rtems-lock-model/lock-00-01-10/base/Condition.java
../sv-benchmarks/java/rtems-lock-model/lock-00-01-10/base/PrioLock.java
../sv-benchmarks/java/rtems-lock-model/lock-00-01-10/rtems/WaitQueue.java
../sv-benchmarks/java/rtems-lock-model/lock-00-01-10/rtems/Mutex.java
../sv-benchmarks/java/rtems-lock-model/lock-00-01-10/rtems/OrderList.java
../sv-benchmarks/java/rtems-lock-model/lock-00-01-10/rtems/RTEMSThread.java
../sv-benchmarks/java/rtems-lock-model/lock-00-01-10/harness/TestThread.java
../sv-benchmarks/java/rtems-lock-model/lock-00-01-10/harness/Environment.java
import org.sosy_lab.sv_benchmarks.Verifier;

    if (Verifier.nondetBoolean()) {

      if (Verifier.nondetBoolean()) {

../sv-benchmarks/java/jpf-regression/ExSymExeArrays_false/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe18_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExDarko_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    new Main().unboxed(Verifier.nondetInt(), 2);

    new Main().boxed(Verifier.nondetInt(), 2);

    new Main().customBoxed(Verifier.nondetInt(), 2);

../sv-benchmarks/java/jpf-regression/ExSymExeTestAssignments_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExeBool_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe5_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

    int y = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExe12_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    field = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExe9_false/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe13_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int arg = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExeI2D_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExLazy_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    test(null, Verifier.nondetInt());

../sv-benchmarks/java/jpf-regression/ExSymExeGetStatic_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExeResearch_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int arg = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExMIT_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    foo(Verifier.nondetInt());

../sv-benchmarks/java/jpf-regression/ExSymExe1_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt() % 1000;

    int y = Verifier.nondetInt() % 50;

../sv-benchmarks/java/jpf-regression/ExSymExe4_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe28_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

    int y = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExe10_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    if (Verifier.nondetInt() == 2) inst.test(x, field);

../sv-benchmarks/java/jpf-regression/ExSymExeTestAssignments_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExeD2I_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    double x = Verifier.nondetDouble();

../sv-benchmarks/java/jpf-regression/ExSymExe8_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt() % 3;

    int y = Verifier.nondetInt() % 5;

../sv-benchmarks/java/jpf-regression/ExSymExeLCMP_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    long x = (long) Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExe12_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int arg = Verifier.nondetShort();

../sv-benchmarks/java/jpf-regression/ExSymExeF2I_false/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExeTestClassFields_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    if (Verifier.nondetInt() == 2) (new Main()).test();

../sv-benchmarks/java/jpf-regression/ExSymExe16_false/Main.java
../sv-benchmarks/java/jpf-regression/ExException_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    test(Verifier.nondetBoolean() ? 1 : 2);

../sv-benchmarks/java/jpf-regression/ExSymExeI2D_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExe21_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

    field = Verifier.nondetInt() % 9;

../sv-benchmarks/java/jpf-regression/ExSymExeD2L_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    double x = Verifier.nondetDouble();

../sv-benchmarks/java/jpf-regression/ExSymExe27_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int a = Verifier.nondetInt();

    int b = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExMIT_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    if (Verifier.nondetInt() == 1) foo(0);

../sv-benchmarks/java/jpf-regression/ExSymExe10_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    field = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExe15_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    field = Verifier.nondetShort();

../sv-benchmarks/java/jpf-regression/ExSymExe4_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

    int y = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/TestLazy_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int arg = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExe17_false/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe14_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    field = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExeSuzette_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    ex.test(Verifier.nondetInt(), Verifier.nondetInt());

../sv-benchmarks/java/jpf-regression/ExSymExeSimple_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int arg = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExeF2I_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    float x = Verifier.nondetFloat();

../sv-benchmarks/java/jpf-regression/ExSymExe16_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExeGetStatic_false/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExeComplexMath_false/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe3_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

    int y = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExeComplexMath_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe8_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe3_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe21_true/Main.java
../sv-benchmarks/java/jpf-regression/TestLazy_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    (new Main()).f(Verifier.nondetInt(), 0);

../sv-benchmarks/java/jpf-regression/ExSymExe7_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int arg = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExGenSymExe_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    n.elem = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExeF2L_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    float x = Verifier.nondetFloat();

../sv-benchmarks/java/jpf-regression/ExSymExe6_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExeArrays_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExeTestClassFields_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    (new Main()).test(Verifier.nondetInt());

../sv-benchmarks/java/jpf-regression/ExSymExeF2L_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    float x = Verifier.nondetFloat();

../sv-benchmarks/java/jpf-regression/ExSymExeLongBytecodes_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    long x = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExe17_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExeFNEG_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    float x = Verifier.nondetFloat();

../sv-benchmarks/java/jpf-regression/ExSymExe19_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    field = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExeD2I_false/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe18_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe11_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    field = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExeI2F_false/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe11_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int arg = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExe_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe25_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int a = Verifier.nondetInt();

    int b = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExException_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    test(Verifier.nondetInt());

../sv-benchmarks/java/jpf-regression/ExSymExe2_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

    int y = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExeBool_false/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExeLongBytecodes_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    long x = Verifier.nondetLong();

../sv-benchmarks/java/jpf-regression/ExSymExe2_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExeSwitch_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExLazy_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    if (Verifier.nondetInt() == 0) test(null, 0);

    else test(null, Verifier.nondetInt());

../sv-benchmarks/java/jpf-regression/ExSymExeLCMP_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    long x = Verifier.nondetLong();

../sv-benchmarks/java/jpf-regression/ExSymExeD2L_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    double x = Verifier.nondetDouble();

../sv-benchmarks/java/jpf-regression/ExSymExeSwitch_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExe27_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe26_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe20_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe9_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExeSuzette_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int arg = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExDarko_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

    int y = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExeSimple_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int arg = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExeResearch_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExe6_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt() % 3;

    int y = Verifier.nondetInt() % 1;

../sv-benchmarks/java/jpf-regression/ExSymExeFNEG_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    float x = Verifier.nondetFloat();

../sv-benchmarks/java/jpf-regression/ExSymExe28_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe5_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe19_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

    field = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExe25_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe20_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

    field = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExe1_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe26_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int arg = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExGenSymExe_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    n.elem = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExe14_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int arg = Verifier.nondetShort();

../sv-benchmarks/java/jpf-regression/ExSymExe29_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt() % 3;

    int y = Verifier.nondetInt() % 5;

../sv-benchmarks/java/jpf-regression/ExSymExeI2F_true/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetBoolean() ? 3 : 0;

../sv-benchmarks/java/jpf-regression/ExSymExe_false/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe13_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int x = Verifier.nondetInt();

    field = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExe7_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    int arg = Verifier.nondetInt();

../sv-benchmarks/java/jpf-regression/ExSymExe29_true/Main.java
../sv-benchmarks/java/jpf-regression/ExSymExe15_false/Main.java
import org.sosy_lab.sv_benchmarks.Verifier;

    field = Verifier.nondetInt();

